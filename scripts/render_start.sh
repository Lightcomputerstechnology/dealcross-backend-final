#!/usr/bin/env bash
set -ueo pipefail

export PYTHONPATH=.

echo "=== Dealcross backend boot ==="
echo "CWD: $(pwd)"
echo "Python: $(python --version)"
echo "Pip:    $(pip --version)"
echo "PORT:   ${PORT:-<unset>}"
echo "ENV:    APP_ENV=${APP_ENV:-}, DATABASE_URL=${DATABASE_URL:-<unset>}, REDIS_URL=${REDIS_URL:-<unset>}"

echo
echo "== Repo tree (top level) =="
ls -la | sed -n '1,200p'

# 1) Ensure aerich.ini exists (Render runs from /opt/render/project/src)
if [[ ! -f aerich.ini ]]; then
  echo "‚ùå aerich.ini NOT found in repo root. Aborting so you can fix."
  exit 2
fi
echo "‚úÖ aerich.ini found."

# 2) Show aerich.ini so we‚Äôre sure the tortoise_orm path is correct
echo
echo "== aerich.ini =="
cat aerich.ini

echo
echo "== Verifying Aerich availability =="
aerich -h >/dev/null 2>&1 && echo "‚úÖ Aerich is installed" || { echo "‚ùå Aerich not installed"; exit 3; }

# 3) Tortoise ORM settings sanity
python - <<'PY'
from project_config.dealcross_config import settings
from core.config import TORTOISE_ORM
print("‚úÖ settings OK")
print("‚Ä¢ Effective DB URL:", settings.get_effective_database_url())
print("‚Ä¢ TORTOISE apps:", list(TORTOISE_ORM.get("apps",{})))
print("‚Ä¢ Models count:", len(TORTOISE_ORM["apps"]["models"]["models"]))
PY

# 4) Decide between first init and upgrade
echo
if [[ -d migrations && -f migrations/models/__init__.py ]]; then
  echo "üîº Running 'aerich upgrade' (migrations already present)..."
  aerich upgrade || { echo "‚ùå aerich upgrade failed"; exit 4; }
else
  echo "üÜï First run: initializing Aerich and DB schema‚Ä¶"
  aerich init -t core.config.TORTOISE_ORM || echo "‚ÑπÔ∏è aerich init already done"
  aerich init-db
fi

echo
echo "üöÄ Starting Uvicorn..."
exec uvicorn main:app --host 0.0.0.0 --port "${PORT:-10000}"